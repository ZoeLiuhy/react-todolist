{"version":3,"sources":["useTasks.js","TaskItem.js","App.js","reportWebVitals.js","index.js"],"names":["useTasks","useState","id","content","finished","tasks","setTasks","value","setValue","useRef","filter","setFilter","handleAddTask","current","handleInputChange","e","target","handleDeleteTask","task","handleMarkFinished","map","updateFilter","newFilter","handleDeleteAllTasks","Task","styled","div","TaskContent","props","TaskBtns","MarkFinishedBtn","button","DeleteBtn","TaskItem","handleDeleteBtnClick","useCallback","handleMarkFinishedBtnToggle","onClick","Wrapper","Title","h1","InputBlock","Input","input","SubmitBtn","TaskList","Footer","FilterBtns","FilterBtn","DeleteAllTasks","App","placeholder","onChange","isActive","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17e94d2e.chunk.js","sourcesContent":["import { useState, useRef } from \"react\";\r\n\r\nfunction useTasks() {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: 1,\r\n      content: \"example\",\r\n      finished: false,\r\n    },\r\n  ]);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const id = useRef(2);\r\n  const handleAddTask = () => {\r\n    setTasks([\r\n      {\r\n        id: id.current,\r\n        content: value,\r\n        finished: false,\r\n      },\r\n      ...tasks,\r\n    ]);\r\n    setValue(\"\");\r\n    id.current++;\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleDeleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const handleMarkFinished = (id) => {\r\n    setTasks(\r\n      tasks.map((task) => {\r\n        if (task.id !== id) return task;\r\n        return {\r\n          ...task,\r\n          finished: !task.finished,\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDeleteAllTasks = () => {\r\n    setTasks([]);\r\n  };\r\n\r\n  const [filter, setFilter] = useState(\"all\");\r\n\r\n  const updateFilter = (newFilter) => {\r\n    setFilter(newFilter);\r\n  };\r\n\r\n  return {\r\n    handleAddTask,\r\n    handleInputChange,\r\n    handleDeleteTask,\r\n    handleMarkFinished,\r\n    updateFilter,\r\n    handleDeleteAllTasks,\r\n\r\n    tasks,\r\n    value,\r\n    filter,\r\n  };\r\n}\r\n\r\nexport default useTasks;\r\n","import styled from \"styled-components\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst Task = styled.div`\r\n  display: flex;\r\n  border-bottom: 2px #00838f solid;\r\n  margin: 20px 60px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst TaskContent = styled.div`\r\n  ${(props) =>\r\n    props.finished &&\r\n    `\r\ntext-decoration: line-through\r\n`}\r\n`;\r\n\r\nconst TaskBtns = styled.div``;\r\n\r\nconst MarkFinishedBtn = styled.button`\r\n  min-width: 80px;\r\n  margin: 10px 5px;\r\n  border-radius: 6px;\r\n  border: 1px #607d8b solid;\r\n  padding: 6px;\r\n  background-color: #ffd600;\r\n  color: #006064;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #006064;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst DeleteBtn = styled(MarkFinishedBtn)`\r\n  margin: 0px 8px;\r\n  background-color: white;\r\n`;\r\n\r\nfunction TaskItem({ task, handleDeleteTask, handleMarkFinished }) {\r\n  const handleDeleteBtnClick = useCallback(() => {\r\n    handleDeleteTask(task.id);\r\n  }, [handleDeleteTask, task]);\r\n\r\n  const handleMarkFinishedBtnToggle = useCallback(() => {\r\n    handleMarkFinished(task.id);\r\n  }, [handleMarkFinished, task]);\r\n\r\n  return (\r\n    <Task data-task-id={task.id}>\r\n      <TaskContent finished={task.finished}>{task.content}</TaskContent>\r\n      <TaskBtns>\r\n        <MarkFinishedBtn onClick={handleMarkFinishedBtnToggle}>\r\n          {task.finished ? \"Unfinished\" : \"Finished\"}\r\n        </MarkFinishedBtn>\r\n        <DeleteBtn onClick={handleDeleteBtnClick}>Delete</DeleteBtn>\r\n      </TaskBtns>\r\n    </Task>\r\n  );\r\n}\r\n\r\nexport default TaskItem;\r\n","import \"./App.css\";\nimport styled from \"styled-components\";\nimport useTasks from \"./useTasks\";\nimport TaskItem from \"./TaskItem\";\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 5px 25px;\n  text-align: center;\n  width: 765px;\n  width: 100%;\n  background: #cfd8dc;\n  min-height: 500px;\n`;\n\nconst Title = styled.h1`\n  color: #00838f;\n  margin: 20px;\n`;\n\nconst InputBlock = styled.div`\n  display: flex;\n  margin: 0 auto;\n  max-width: 768px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  border-radius: 6px;\n  border: 2px #607d8b solid;\n  padding: 5px;\n  height: 30%;\n  width: 50%;\n  min-width: 100px;\n  margin: 0 auto;\n`;\n\nconst SubmitBtn = styled.button`\n  min-width: 80px;\n  margin: 0px 8px;\n  border-radius: 6px;\n  border: 1px #607d8b solid;\n  padding: 6px;\n  background-color: #006064;\n  color: white;\n  cursor: pointer;\n  &:hover {\n    background-color: white;\n    color: #006064;\n  }\n`;\n\nconst TaskList = styled.div``;\n\nconst Footer = styled.div`\n  display: flex;\n  text-align: center;\n  justify-content: space-between;\n  padding: 5px 50px;\n`;\n\nconst FilterBtns = styled.div``;\n\nconst FilterBtn = styled(SubmitBtn)`\n  background-color: transparent;\n  color: #006064;\n  font-size: 14px;\n  border: 1px #ffd600 solid;\n  margin: 2px;\n  padding: 4px;\n  &:hover {\n    background-color: #ffd600;\n    color: black;\n  }\n`;\n\nconst DeleteAllTasks = styled(SubmitBtn)`\n  background: transparent;\n  color: #006064;\n  font-size: 14px;\n  margin: 2px;\n  padding: 4px;\n  &:hover {\n    color: black;\n  }\n`;\n\nfunction App() {\n  const {\n    handleAddTask,\n    handleInputChange,\n    handleDeleteTask,\n    handleMarkFinished,\n    updateFilter,\n    handleDeleteAllTasks,\n\n    tasks,\n    value,\n    filter,\n  } = useTasks();\n\n  return (\n    <Wrapper>\n      <Title>To Do List</Title>\n      <InputBlock>\n        <Input\n          placeholder=\"Create a task ...\"\n          value={value}\n          onChange={handleInputChange}\n        ></Input>\n        <SubmitBtn onClick={handleAddTask}>Submit</SubmitBtn>\n      </InputBlock>\n      <TaskList>\n        {tasks\n          .filter((task) => {\n            if (filter === \"all\") return true;\n            if (filter === \"unfinished\") {\n              return !task.finished;\n            }\n            if (filter === \"finished\") {\n              if (task.finished) return true;\n              return false;\n            }\n          })\n          .map((task) => (\n            <TaskItem\n              key={task.id}\n              task={task}\n              handleDeleteTask={handleDeleteTask}\n              handleMarkFinished={handleMarkFinished}\n            />\n          ))}\n      </TaskList>\n      <Footer>\n        <FilterBtns>\n          <FilterBtn\n            onClick={() => updateFilter(\"all\")}\n            isActive={filter === \"all\"}\n          >\n            All\n          </FilterBtn>\n          <FilterBtn\n            onClick={() => updateFilter(\"unfinished\")}\n            isActive={filter === \"unfinished\"}\n          >\n            Unfinished\n          </FilterBtn>\n          <FilterBtn\n            onClick={() => updateFilter(\"finished\")}\n            isActive={filter === \"finished\"}\n          >\n            Finished\n          </FilterBtn>\n        </FilterBtns>\n        <DeleteAllTasks onClick={handleDeleteAllTasks}>\n          Delete all\n        </DeleteAllTasks>\n      </Footer>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nreportWebVitals();\n"],"sourceRoot":""}